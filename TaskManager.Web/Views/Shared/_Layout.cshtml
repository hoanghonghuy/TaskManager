<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - TaskManager</title>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css" />
    <link rel="stylesheet" href="~/css/custom.css" asp-append-version="true" />
</head>
<body>
    @if (User.Identity!.IsAuthenticated)
    {
        @* Form này dùng để cung cấp AntiForgeryToken cho các thao tác JS *@
        <form id="antiForgeryForm" class="d-none">@Html.AntiForgeryToken()</form>
    }

    <div class="d-flex" style="height: 100vh;">
        <nav class="sidebar d-none d-md-block" id="sidebar">
            <a class="navbar-brand mb-4 d-block" asp-area="" asp-controller="Home" asp-action="Index">
                <i class="bi bi-check2-square me-2"></i>TaskManager
            </a>
            <ul class="nav flex-column gap-1">
                <li class="nav-item"><a class="nav-link" asp-controller="Home" asp-action="Index"><i class="bi bi-house me-2"></i>Trang chủ</a></li>
                @if (User.Identity!.IsAuthenticated)
                {
                    <li class="nav-item"><a class="nav-link" asp-controller="Tasks" asp-action="Index"><i class="bi bi-list-task me-2"></i>Công việc</a></li>
                    <li class="nav-item"><a class="nav-link" asp-controller="Calendar" asp-action="Index"><i class="bi bi-calendar-event me-2"></i>Lịch</a></li>
                    <li class="nav-item"><a class="nav-link" asp-controller="Projects" asp-action="Index"><i class="bi bi-folder me-2"></i>Danh sách</a></li>
                    @if (User.IsInRole("Admin"))
                    {
                        <li class="nav-item"><a class="nav-link" asp-controller="Users" asp-action="Index"><i class="bi bi-people-fill me-2"></i>Quản lý người dùng</a></li>
                    }
                }
            </ul>
        </nav>

        <div class="main-content flex-grow-1">
            <header class="d-flex justify-content-between align-items-center py-2 header-navbar">
                <div class="d-flex w-100 mx-3">
                    <form asp-controller="Tasks" asp-action="Index" method="get" class="d-flex w-100">
                        <input name="searchString" class="form-control me-2" type="text" placeholder="Tìm kiếm công việc...">
                        <button class="btn btn-secondary" type="submit">Tìm</button>
                    </form>
                </div>
                <ul class="navbar-nav ms-auto flex-row align-items-center me-3">
                    @if (User.Identity!.IsAuthenticated)
                    {
                        <li class="nav-item dropdown">
                            <a class="nav-link dropdown-toggle" href="#" id="navbarDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                                <i class="bi bi-person-circle me-1"></i> @User.Identity.Name
                            </a>
                            <ul class="dropdown-menu dropdown-menu-end" aria-labelledby="navbarDropdown">
                                <li><a class="dropdown-item" href="#" id="theme-switcher"><i class="bi bi-sun-fill me-2"></i><span>Giao diện sáng</span></a></li>
                                <li><hr class="dropdown-divider"></li>
                                <li><a class="dropdown-item" asp-controller="Account" asp-action="Profile">Thông tin cá nhân</a></li>
                                <li><a class="dropdown-item" asp-controller="Account" asp-action="ChangePassword">Đổi mật khẩu</a></li>
                                <li><hr class="dropdown-divider"></li>
                                <li>
                                    <form asp-controller="Account" asp-action="Logout" method="post"><button type="submit" class="dropdown-item">Đăng xuất</button></form>
                                </li>
                            </ul>
                        </li>
                    }
                </ul>
            </header>

            @RenderBody()

        </div>

        <div id="task-details-panel" class="task-details-panel">
            <div class="d-flex justify-content-end mb-3">
                <button id="close-panel-btn" type="button" class="btn-close" aria-label="Close"></button>
            </div>
            <div id="task-details-content"></div>
        </div>
    </div>

    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>

    <script>
        // Sử dụng một IIFE duy nhất để bao bọc tất cả các script tùy chỉnh
        (function() {

            // --- Logic cho panel chi tiết công việc ---
            const panel = document.getElementById('task-details-panel');
            if (panel) {
                const detailsContent = document.getElementById('task-details-content');
                const mainContent = document.querySelector('.main-content');
                const closeBtn = document.getElementById('close-panel-btn');

                document.addEventListener('click', function(e) {
                    const viewLink = e.target.closest('.view-task-details');
                    if (viewLink) {
                        e.preventDefault();
                        const taskId = viewLink.dataset.taskId;

                        detailsContent.innerHTML = '<div class="text-center mt-5"><div class="spinner-border" role="status"><span class="visually-hidden">Loading...</span></div></div>';
                        panel.classList.add('show');
                        mainContent.classList.add('shift');

                        fetch(`/Tasks/Details/${taskId}?isPartial=true`)
                            .then(response => response.ok ? response.text() : Promise.reject('Network response was not ok.'))
                            .then(html => { detailsContent.innerHTML = html; })
                            .catch(error => {
                                console.error('Fetch error:', error);
                                detailsContent.innerHTML = '<div class="alert alert-danger">Không thể tải chi tiết công việc.</div>';
                            });
                    }
                });

                if (closeBtn) {
                    closeBtn.addEventListener('click', function() {
                        panel.classList.remove('show');
                        mainContent.classList.remove('shift');
                    });
                }
            }

            // --- Logic cho chuyển đổi theme ---
            const themeSwitcher = document.getElementById('theme-switcher');
            if(themeSwitcher) {
                const body = document.body;
                const sunIcon = 'bi-sun-fill';
                const moonIcon = 'bi-moon-stars-fill';
                const storageKey = 'theme-preference';

                const setTheme = (theme) => {
                    body.className = `theme-${theme}`;
                    const icon = themeSwitcher.querySelector('i');
                    const textSpan = themeSwitcher.querySelector('span');
                    if (theme === 'dark') {
                        icon.className = `bi ${sunIcon} me-2`;
                        textSpan.textContent = 'Giao diện sáng';
                    } else {
                        icon.className = `bi ${moonIcon} me-2`;
                        textSpan.textContent = 'Giao diện tối';
                    }
                    localStorage.setItem(storageKey, theme);
                };

                themeSwitcher.addEventListener('click', (e) => {
                    e.preventDefault();
                    const currentTheme = localStorage.getItem(storageKey) || (window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light');
                    const newTheme = currentTheme === 'dark' ? 'light' : 'dark';
                    setTheme(newTheme);
                });

                const initialTheme = localStorage.getItem(storageKey) || (window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light');
                setTheme(initialTheme);
            }

            // --- Logic cho ô thêm nhanh công việc ---
            const quickAddTaskInput = document.getElementById('quick-add-task-title');
            if (quickAddTaskInput) {
                quickAddTaskInput.addEventListener('keypress', function(e) {
                    if (e.key === 'Enter') {
                        e.preventDefault();
                        const title = this.value.trim();

                        if (title) {
                            const form = document.createElement('form');
                            form.method = 'post';
                            form.action = '/Tasks/Create';

                            // Lấy token từ form đã được tạo sẵn
                            const tokenInput = document.querySelector('#antiForgeryForm input[name="__RequestVerificationToken"]');
                            if(tokenInput) {
                                form.appendChild(tokenInput.cloneNode(true));
                            }

                            const titleInput = document.createElement('input');
                            titleInput.type = 'hidden';
                            titleInput.name = 'Title';
                            titleInput.value = title;
                            form.appendChild(titleInput);

                            const priorityInput = document.createElement('input');
                            priorityInput.type = 'hidden';
                            priorityInput.name = 'Priority';
                            priorityInput.value = 'None';
                            form.appendChild(priorityInput);

                            document.body.appendChild(form);
                            form.submit();
                        }
                    }
                });
            }

        })(); 
    </script>

    @await RenderSectionAsync("Scripts", required: false)
</body>
</html>